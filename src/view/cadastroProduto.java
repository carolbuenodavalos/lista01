/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import javax.swing.table.DefaultTableModel;
import model.cadastroProdutos;
import dao.cadastroProdutoDao;
import java.util.ArrayList;

/**
 *
 * @author carol
 */
public class cadastroProduto extends javax.swing.JFrame {

    /**
     * Creates new form cadastroProduto
     * 
     */
    private void carregarProdutos() {
    DefaultTableModel tableModel = (DefaultTableModel) prodTabela.getModel();
    tableModel.setRowCount(0); // Limpa qualquer linha existente

    cadastroProdutoDao dao = new cadastroProdutoDao();
    ArrayList<cadastroProdutos> listaProdutos = dao.consultar();

    for (cadastroProdutos produto : listaProdutos) {
        tableModel.addRow(new Object[]{
            produto.getIdProduto(),
            produto.getNomeProduto(),
            produto.getDescricao(),
            produto.getPreco(),
            produto.getQuantidade()
        });
    }
}

    public cadastroProduto() {
        {
    initComponents();
    carregarProdutos();
    addProduto.addActionListener(new java.awt.event.ActionListener() {
     public void actionPerformed(java.awt.event.ActionEvent evt) {
     addProdutoActionPerformed(evt);
        }
    });

    // Adiciona o listener para clique na tabela de produtos
    prodTabela.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            prodTabelaMouseClicked(evt);
        }
    });

 }}
  
    
private boolean verificaDuplicidade(int id) {
    DefaultTableModel model = (DefaultTableModel) prodTabela.getModel();
    for (int i = 0; i < model.getRowCount(); i++) {
        int currentId = (int) model.getValueAt(i, 0);
        if (currentId == id) {
            return true; // ID duplicado encontrado
        }
    }
    return false;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Prodnome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Prodpreço = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ProdQuantidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Proddescricao = new javax.swing.JTextArea();
        addProduto = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        prodTabela = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        Prodid = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cadastro de Produtos");

        Prodnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProdnomeActionPerformed(evt);
            }
        });

        jLabel2.setText("nome:");

        jLabel3.setText("preço:");

        Prodpreço.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProdpreçoActionPerformed(evt);
            }
        });

        jLabel4.setText("quantidade:");

        ProdQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProdQuantidadeActionPerformed(evt);
            }
        });

        jLabel5.setText("descrição:");

        Proddescricao.setColumns(20);
        Proddescricao.setRows(5);
        jScrollPane1.setViewportView(Proddescricao);

        addProduto.setText("+ adicionar");
        addProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProdutoActionPerformed(evt);
            }
        });

        jToggleButton2.setText("cancelar/voltar");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        prodTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Descricao", "Preço", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        prodTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prodTabelaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(prodTabela);
        if (prodTabela.getColumnModel().getColumnCount() > 0) {
            prodTabela.getColumnModel().getColumn(0).setResizable(false);
            prodTabela.getColumnModel().getColumn(1).setResizable(false);
            prodTabela.getColumnModel().getColumn(3).setResizable(false);
            prodTabela.getColumnModel().getColumn(4).setResizable(false);
        }

        jButton1.setText("- excluir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("ID:");

        Prodid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProdidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Prodid, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Prodnome, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(ProdQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Prodpreço, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(85, 85, 85)
                                .addComponent(addProduto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jToggleButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addContainerGap(21, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Prodid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(Prodnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProdQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Prodpreço, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addProduto)
                    .addComponent(jToggleButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProdnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProdnomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProdnomeActionPerformed

    private void ProdpreçoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProdpreçoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProdpreçoActionPerformed

    private void ProdQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProdQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProdQuantidadeActionPerformed

    private boolean editavel = false;

    private void addProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProdutoActionPerformed
     {                                               
    addProduto.setEnabled(true); // Habilita novamente o botão
    addProduto.setSelected(false);
    
    if (editavel) {
        // Código para atualizar a linha existente
        int selectedRow = prodTabela.getSelectedRow();
        if (selectedRow != -1) {
            try {
                int id = Integer.parseInt(Prodid.getText()); // Mantenha o ID inalterado
                String nome = Prodnome.getText();
                String descricao = Proddescricao.getText();
                float preco = Float.parseFloat(Prodpreço.getText());
                int quantidade = Integer.parseInt(ProdQuantidade.getText());

                // Atualiza a tabela e o banco de dados
                cadastroProdutos produto = new cadastroProdutos(id, nome, descricao, preco, quantidade);
                cadastroProdutoDao dao = new cadastroProdutoDao();
                dao.alterar(produto);

                prodTabela.setValueAt(nome, selectedRow, 1); // Nome na coluna 1
                prodTabela.setValueAt(descricao, selectedRow, 2); // Descrição na coluna 2
                prodTabela.setValueAt(preco, selectedRow, 3); // Preço na coluna 3
                prodTabela.setValueAt(quantidade, selectedRow, 4); // Quantidade na coluna 4
                prodTabela.setEnabled(true);
                addProduto.setText("Adicionar");
                editavel = false; // Volta para o modo de adição
                JOptionPane.showMessageDialog(this, "Produto atualizado com sucesso!");

                Prodid.setText("");
                Prodnome.setText("");
                Proddescricao.setText("");
                Prodpreço.setText("");
                ProdQuantidade.setText("");
                Prodid.setEnabled(true); 
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Erro de formato nos campos de preço ou quantidade.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        // Código para adicionar um novo produto
        try {
            int id = Integer.parseInt(Prodid.getText());
            if (verificaDuplicidade(id)) {
                JOptionPane.showMessageDialog(this, "ID já existe! Por favor, forneça um ID único.", "Erro", JOptionPane.ERROR_MESSAGE);
                return; // Interrompe o processo de adição
            }
            String nome = Prodnome.getText();
            String descricao = Proddescricao.getText();
            float preco = Float.parseFloat(Prodpreço.getText());
            int quantidade = Integer.parseInt(ProdQuantidade.getText());

            cadastroProdutos produto = new cadastroProdutos(id, nome, descricao, preco, quantidade);
            cadastroProdutoDao dao = new cadastroProdutoDao();
            dao.inserir(produto);

            DefaultTableModel prodTable = (DefaultTableModel) prodTabela.getModel();
            prodTable.addRow(new Object[]{id, nome, descricao, preco, quantidade});

            Prodid.setText(""); // Limpa o campo ID
            Prodnome.setText("");
            Proddescricao.setText("");
            Prodpreço.setText("");
            ProdQuantidade.setText("");
            JOptionPane.showMessageDialog(this, "Produto adicionado com sucesso!");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Erro de formato nos campos de preço ou quantidade.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    
    }//GEN-LAST:event_addProdutoActionPerformed
     }}
    
    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        menuProdutos voltaMenu = new menuProdutos();
        voltaMenu.setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton2ActionPerformed


    private void prodTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodTabelaMouseClicked
    if ((prodTabela.getSelectedRow() != -1) && (evt.getClickCount() == 2)) {
        Prodid.setText(prodTabela.getValueAt(prodTabela.getSelectedRow(), 0).toString());
        Prodnome.setText(prodTabela.getValueAt(prodTabela.getSelectedRow(), 1).toString());
        Proddescricao.setText(prodTabela.getValueAt(prodTabela.getSelectedRow(), 2).toString());
        Prodpreço.setText(prodTabela.getValueAt(prodTabela.getSelectedRow(), 3).toString());
        ProdQuantidade.setText(prodTabela.getValueAt(prodTabela.getSelectedRow(), 4).toString());
        prodTabela.setEnabled(false);
        addProduto.setText("Alterar");
        Prodid.setEnabled(false); 
        editavel = true;
    
    }
    }//GEN-LAST:event_prodTabelaMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    { 
        {
    if (prodTabela.getSelectedRow() != -1) {
        int msgRetorno = JOptionPane.showConfirmDialog(null,
                "Confirme para remover o cadastro",
                "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (msgRetorno == JOptionPane.YES_OPTION) {
            DefaultTableModel tbcadastro = (DefaultTableModel) prodTabela.getModel();
            int selectedRow = prodTabela.getSelectedRow();
            int id = (int) prodTabela.getValueAt(selectedRow, 0); // Captura o ID do produto a ser excluído

            // Remove a linha da tabela
            tbcadastro.removeRow(selectedRow);

            // Exclui o produto do banco de dados
            cadastroProdutoDao dao = new cadastroProdutoDao();
            dao.excluirID(id);

            JOptionPane.showMessageDialog(this, "Produto removido com sucesso!");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Selecione um Cadastro para excluir!");
    }
    }//GEN-LAST:event_jButton1ActionPerformed
    }}
    private void ProdidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProdidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProdidActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cadastroProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ProdQuantidade;
    private javax.swing.JTextArea Proddescricao;
    private javax.swing.JTextField Prodid;
    private javax.swing.JTextField Prodnome;
    private javax.swing.JTextField Prodpreço;
    private javax.swing.JToggleButton addProduto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JTable prodTabela;
    // End of variables declaration//GEN-END:variables
}
